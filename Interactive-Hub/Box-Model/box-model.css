:root {
  --比率-外边距-上: 50%;
  --比率-外边距-下: 50%;
  --比率-外边距-左: 50%;
  --比率-外边距-右: 50%;
  --比率-内边距-上: 50%;
  --比率-内边距-下: 50%;
  --比率-内边距-左: 50%;
  --比率-内边距-右: 50%;
  --比率-边框-上: 50%;
  --比率-边框-下: 50%;
  --比率-边框-左: 50%;
  --比率-边框-右: 50%;
  --比率-盒子-内容-宽: 50%;
  --比率-盒子-内容-高: 50%;
  --拇指宽度: 16px;
  --颜色-外边距: rgb(189, 94, 194);
  --颜色-边框: rgb(72, 173, 116);
  --颜色-内边距: goldenrod;
  --颜色-内容: rgb(107, 159, 219);
  --进度条颜色-外边距: rgb(149, 55, 154);
  --进度条颜色-边框: rgb(36, 109, 68);
  --进度条颜色-内边距: rgb(146, 72, 12);
  --进度条颜色-内容: rgb(44, 85, 133);
  --进度条颜色-未填充: rgba(224, 224, 224, 0.85);
}

.盒子 {
  width: 800px;
  height: 800px;
  /* outline: solid 1px rgb(196, 196, 196); */
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  flex-shrink: 0;
}

.盒子 div {
  position: absolute;
}

.第4盒 {
  background-color: var(--颜色-外边距);
  width: 350px;
  height: 350px;
  animation: 第4盒动画 1s ease-in-out infinite alternate;
}

@keyframes 第4盒动画 {
  from {
    filter: opacity(1);
  }
  to {
    filter: opacity(0.1);
  }
}

.第3盒 {
  background-color: var(--颜色-边框);
  width: 250px;
  height: 250px;
  outline: solid 3px white;
}

.第2盒 {
  background-color: var(--颜色-内边距);
  width: 150px;
  height: 150px;
}

.第1盒 {
  background-color: var(--颜色-内容);
  width: 50px;
  height: 50px;
}

.选项 {
  width: 650px;
  height: 800px;
  /* outline: solid 1px rgb(196, 196, 196); */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  gap: 20px;
}

.单项 {
  position: relative;
  width: 100%;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  gap: 20px;
}

.单项:hover::after {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  content: "";
  /* background-color: red; */
  border-top: solid 2px gray;
  border-left: solid 2px gray;
  border-bottom: solid 2px gray;
  pointer-events: none;
}

.单项-外边距 {
  background-color: #0c172430;
  border-right: solid 5px var(--颜色-外边距);
}

.单项-边框 {
  background-color: #0c172460;
  border-right: solid 5px var(--颜色-边框);
}

.单项-内边距 {
  background-color: #0c172490;
  border-right: solid 5px var(--颜色-内边距);
}

.单项-内容 {
  background-color: #0c1724c0;
  border-right: solid 5px var(--颜色-内容);
}

.单项属性-名称 {
  width: 100px;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(-30deg, #0003 0%, #0007 100%);
  /* font-weight: bolder; */
}

.名称中文 {
  font-size: 1.25rem;
}

.范围选择 {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  padding: 5px 0;
}

.范围单项 {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 15px;
  padding: 5px 0;
}

.范围选择器 {
  appearance: none;
  width: 200px;
  height: 7px;
  border-radius: 10px;
  position: relative;
}

.范围选择器:hover {
  cursor: url("/Images/Common/鼠标-指向.cur"), pointer;
}

.范围选择器::after {
  position: absolute;
  height: 100%;
  width: calc(100% - var(--拇指宽度));
  border-radius: 50px;
  top: 0;
  left: 0;
  transform: translateX(calc(var(--拇指宽度) / 2));
  content: "";
  z-index: 0;
}

input[type="range"]:focus {
  outline: none;
}

.范围选择器::-webkit-slider-thumb {
  position: relative;
  z-index: 1;
  -webkit-appearance: none;
  appearance: none;
  cursor: url(/Images/Common/鼠标-横向缩放.png) 16 6, ew-resize;
  width: var(--拇指宽度);
  aspect-ratio: 1;
  border-radius: var(--拇指宽度);
  background: no-repeat center/contain
    url(/Images/Interactive-Hub/进度条拇指/闪电球.png);
  transform: translateY(-50%) scale(1.25);
  filter: brightness(150%) drop-shadow(0 0 2px black);
}

.范围选择器::-moz-range-thumb {
  position: relative;
  z-index: 1;
  -webkit-appearance: none;
  appearance: none;
  cursor: url(/Images/Common/鼠标-横向缩放.png) 16 6, ew-resize;
  width: var(--拇指宽度);
  aspect-ratio: 1;
  border-radius: var(--拇指宽度);
  background: no-repeat center/contain
    url(/Images/Interactive-Hub/进度条拇指/闪电球.png);
  transform: translateY(-50%) scale(1.25);
  filter: brightness(150%) drop-shadow(0 0 2px black);
}

input[type="range"] {
  background-color: var(--进度条颜色-未填充);
}

.单项-外边距 input[type="range"] {
  -webkit-appearance: none;
  appearance: none;
  background: linear-gradient(
    90deg,
    var(--进度条颜色-外边距) 6%,
    var(--进度条颜色-未填充) 6%
  );
  /* background-color: rgb(107, 57, 110); */
}

.单项-边框 input[type="range"] {
  -webkit-appearance: none;
  appearance: none;
  background: linear-gradient(
    90deg,
    var(--进度条颜色-边框) 6%,
    var(--进度条颜色-未填充) 6%
  );
  /* background-color: seagreen; */
}

.单项-内边距 input[type="range"] {
  -webkit-appearance: none;
  appearance: none;
  background: linear-gradient(
    90deg,
    var(--进度条颜色-内边距) 6%,
    var(--进度条颜色-未填充) 6%
  );
  /* background-color: rgb(170, 127, 18); */
}

.单项-内容 input[type="range"] {
  -webkit-appearance: none;
  appearance: none;
  background: linear-gradient(
    90deg,
    var(--进度条颜色-内容) 6%,
    var(--进度条颜色-未填充) 6%
  );
  /* background-color: rgb(54, 101, 155); */
}

.单项-外边距 input[type="range"]::after {
  background-color: var(--进度条颜色-外边距);
}

.单项-边框 input[type="range"]::after {
  background-color: var(--进度条颜色-边框);
}

.单项-内边距 input[type="range"]::after {
  background-color: var(--进度条颜色-内边距);
}

.单项-内容 input[type="range"]::after {
  background-color: var(--进度条颜色-内容);
}

#外边距上::after {
  clip-path: inset(-5% calc(100% - var(--比率-外边距-上)) -5% 0);
}

#外边距下::after {
  clip-path: inset(-5% calc(100% - var(--比率-外边距-下)) -5% 0);
}

#外边距左::after {
  clip-path: inset(-5% calc(100% - var(--比率-外边距-左)) -5% 0);
}

#外边距右::after {
  clip-path: inset(-5% calc(100% - var(--比率-外边距-右)) -5% 0);
}

#内边距上::after {
  clip-path: inset(-5% calc(100% - var(--比率-内边距-上)) -5% 0);
}

#内边距下::after {
  clip-path: inset(-5% calc(100% - var(--比率-内边距-下)) -5% 0);
}

#内边距左::after {
  clip-path: inset(-5% calc(100% - var(--比率-内边距-左)) -5% 0);
}

#内边距右::after {
  clip-path: inset(-5% calc(100% - var(--比率-内边距-右)) -5% 0);
}

#边框上::after {
  clip-path: inset(-5% calc(100% - var(--比率-边框-上)) -5% 0);
}

#边框下::after {
  clip-path: inset(-5% calc(100% - var(--比率-边框-下)) -5% 0);
}

#边框左::after {
  clip-path: inset(-5% calc(100% - var(--比率-边框-左)) -5% 0);
}

#边框右::after {
  clip-path: inset(-5% calc(100% - var(--比率-边框-右)) -5% 0);
}

#内容宽::after {
  clip-path: inset(-5% calc(100% - var(--比率-盒子-内容-宽)) -5% 0);
}

#内容高::after {
  clip-path: inset(-5% calc(100% - var(--比率-盒子-内容-高)) -5% 0);
}

.单项属性-方向 {
  width: 70px;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  gap: 5px;
}

.中文 {
  color: gold;
}

.代码 {
  color: tomato;
}

.方向代码 {
  font-size: 0.85rem;
}

.值 {
  width: 65px;
  color: darkgrey;
  background-color: rgba(129, 44, 44, 0);
  padding: 5px 2px;
  clip-path: polygon(20% 0%, 100% 0%, 100% 100%, 20% 100%, 0% 50%);
  border-radius: 3px;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 3px;
  font-size: 0.85rem;
}

.值-数字 {
  display: inline-block;
  color: white;
  font-weight: bolder;
  width: 30px;
  text-align: right;
}

.范围单项:has(.范围选择器:hover) > .值,
.范围单项:has(.范围选择器:focus-visible) > .值 {
  background-color: rgba(129, 44, 44, 1);
}

.选项关联区 {
  padding: 0 0 0 15px;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 5px;
  -webkit-user-select: none;
  user-select: none;
  -webkit-user-drag: none;
}

.关联方向 {
  display: flex;
  justify-content: center;
  align-items: center;
  /* gap: 5px; */
}

.关联方向:hover {
  cursor: url("/Images/Common/鼠标-指向.cur"), pointer;
}

.单项-外边距 .关联方向 > label {
  color: var(--颜色-外边距);
  padding: 0 5px;
}

.单项-边框 .关联方向 > label {
  color: var(--颜色-边框);
  padding: 0 5px;
}

.单项-内边距 .关联方向 > label {
  color: var(--颜色-内边距);
  padding: 0 5px;
}

.单项-内容 .关联方向 > label {
  color: var(--颜色-内容);
  padding: 0 5px;
}

.关联方向:hover > label {
  color: rgb(212, 72, 72);
}

.关联方向:hover input {
  scale: 1.1;
}

.关联方向 > label:hover,
.关联方向 > .checkbox-封装器 > label:hover,
.关联方向 > .checkbox-封装器 > input:hover,
input[type="radio"]:hover {
  cursor: url("/Images/Common/鼠标-指向.cur"), pointer;
}

.checkbox-封装器 {
  position: relative;
  height: 10px;
  width: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.checkbox-封装器 > input {
  appearance: none;
  width: 100%;
  height: 100%;
  outline: solid 1px gray;
}

.checkbox-封装器:hover > input {
  cursor: url("/Images/Common/鼠标-指向.cur"), pointer;
}

.checkbox-封装器 > span {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: -80%;
  /* color: rgb(52, 184, 118); */
  color: rgb(124, 255, 216);
  transform: scale(1.25);
  visibility: hidden;
  opacity: 0;
  transition: 0.15s;
  pointer-events: none;
}

.checkbox-封装器 > input:checked + span {
  visibility: visible;
  opacity: 1;
}

.盒子尺寸 {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 20px;
  padding: 15px 0;
}

.盒子尺寸代码 {
  font-size: 0.85rem;
}

.盒子尺寸类型 {
  display: flex;
  justify-content: center;
  align-items: center;
  /* gap: 5px; */
  -webkit-user-select: none;
  user-select: none;
  -webkit-user-drag: none;
}

.盒子尺寸类型-label {
  color: lightseagreen;
  /* width: 100px; */
  padding: 0 10px 0 5px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  transition: 0.2s;
}

.盒子尺寸类型-label > span {
  color: rgb(155, 246, 241);
  font-size: 0.85rem;
}

.盒子尺寸 input {
  appearance: none;
  border: solid 1px gray;
  width: 15px;
  height: 15px;
  transition: 0.2s;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}

.radio封装器 {
  height: fit-content;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

.radio封装器 > span {
  position: absolute;
  top: 20%;
  left: 15%;
  transform: scale(1.5);
  /* color: rgb(52, 184, 118); */
  color: rgb(255, 107, 84);
  visibility: hidden;
  opacity: 0;
}

/* .radio封装器:has(input:checked) > span {
  visibility: visible;
  opacity: 1;
  transition: 0.15s;
} */

.盒子尺寸 input:checked:after {
  width: 60%;
  height: 60%;
  content: "";
  background-color: white;
}

.盒子尺寸类型:hover > .盒子尺寸类型-label {
  filter: brightness(120%);
  cursor: url("/Images/Common/鼠标-指向.cur"), pointer;
}

.盒子尺寸类型:hover > .radio封装器 {
  cursor: url("/Images/Common/鼠标-指向.cur"), pointer;
}

.盒子尺寸类型:hover input {
  scale: 1.1;
}
